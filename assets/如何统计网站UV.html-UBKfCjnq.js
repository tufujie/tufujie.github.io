const n=JSON.parse('{"key":"v-2654f1a4","path":"/home/%E7%B3%BB%E7%BB%9F%E8%AE%BE%E8%AE%A1/%E5%A6%82%E4%BD%95%E7%BB%9F%E8%AE%A1%E7%BD%91%E7%AB%99UV.html","title":"如何统计网站UV","lang":"zh-CN","frontmatter":{"title":"如何统计网站UV","description":"UV：Unique Visitor，网站独立访问数，可以是某一个维度的，例如：分钟，小时，天，总计 如何用Redis统计用户访问量。 使用HyperLogLog（HLL）是一种基数估计算法，用于近似计算大数据集中的不同元素数量。它可以提供接近精确计数的结果，但只使用很小的存储空间。 @DisplayName(\\"HyperLogLog\\") @Test void testHyperLogLog() { int index = 0; // N次请求，100次请求 for (int i = 0; i &lt; 100; i++) { // 不能设置过期时间 jedis.pfadd(\\"uv\\", \\"user_\\" + i); jedis.pfadd(\\"uv\\", \\"user_\\" + i); } // 读取uv 理论值是: 100 Long uv = jedis.pfcount(\\"uv\\"); System.out.println(\\"uv: \\" + uv); // 重复执行时，需要删除原先的 // jedis.del(\\"uv\\"); }","head":[["meta",{"property":"og:url","content":"https://mister-hope.github.io/home/%E7%B3%BB%E7%BB%9F%E8%AE%BE%E8%AE%A1/%E5%A6%82%E4%BD%95%E7%BB%9F%E8%AE%A1%E7%BD%91%E7%AB%99UV.html"}],["meta",{"property":"og:site_name","content":"Jef Blog"}],["meta",{"property":"og:title","content":"如何统计网站UV"}],["meta",{"property":"og:description","content":"UV：Unique Visitor，网站独立访问数，可以是某一个维度的，例如：分钟，小时，天，总计 如何用Redis统计用户访问量。 使用HyperLogLog（HLL）是一种基数估计算法，用于近似计算大数据集中的不同元素数量。它可以提供接近精确计数的结果，但只使用很小的存储空间。 @DisplayName(\\"HyperLogLog\\") @Test void testHyperLogLog() { int index = 0; // N次请求，100次请求 for (int i = 0; i &lt; 100; i++) { // 不能设置过期时间 jedis.pfadd(\\"uv\\", \\"user_\\" + i); jedis.pfadd(\\"uv\\", \\"user_\\" + i); } // 读取uv 理论值是: 100 Long uv = jedis.pfcount(\\"uv\\"); System.out.println(\\"uv: \\" + uv); // 重复执行时，需要删除原先的 // jedis.del(\\"uv\\"); }"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2023-12-24T14:07:32.000Z"}],["meta",{"property":"article:author","content":"Jef"}],["meta",{"property":"article:modified_time","content":"2023-12-24T14:07:32.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"如何统计网站UV\\",\\"image\\":[\\"\\"],\\"dateModified\\":\\"2023-12-24T14:07:32.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"Jef\\",\\"url\\":\\"https://mister-hope.com\\"}]}"]]},"headers":[],"git":{"createdTime":1703240737000,"updatedTime":1703426852000,"contributors":[{"name":"tufujie","email":"jef.tu@foxmail.com","commits":1},{"name":"tufujie","email":"tufj@hua-cloud.com.cn","commits":1}]},"readingTime":{"minutes":0.59,"words":177},"filePathRelative":"home/系统设计/如何统计网站UV.md","localizedDate":"2023年12月22日","excerpt":"<p>UV：Unique Visitor，网站独立访问数，可以是某一个维度的，例如：分钟，小时，天，总计</p>\\n<p>如何用Redis统计用户访问量。</p>\\n<p>使用HyperLogLog（HLL）是一种基数估计算法，用于近似计算大数据集中的不同元素数量。它可以提供<strong>接近精确计数</strong>的结果，但只<strong>使用很小的存储空间</strong>。</p>\\n<div class=\\"language-java line-numbers-mode\\" data-ext=\\"java\\"><pre class=\\"language-java\\"><code><span class=\\"token annotation punctuation\\">@DisplayName</span><span class=\\"token punctuation\\">(</span><span class=\\"token string\\">\\"HyperLogLog\\"</span><span class=\\"token punctuation\\">)</span>\\n<span class=\\"token annotation punctuation\\">@Test</span>\\n<span class=\\"token keyword\\">void</span> <span class=\\"token function\\">testHyperLogLog</span><span class=\\"token punctuation\\">(</span><span class=\\"token punctuation\\">)</span> <span class=\\"token punctuation\\">{</span>\\n    <span class=\\"token keyword\\">int</span> index <span class=\\"token operator\\">=</span> <span class=\\"token number\\">0</span><span class=\\"token punctuation\\">;</span>\\n    <span class=\\"token comment\\">// N次请求，100次请求</span>\\n    <span class=\\"token keyword\\">for</span> <span class=\\"token punctuation\\">(</span><span class=\\"token keyword\\">int</span> i <span class=\\"token operator\\">=</span> <span class=\\"token number\\">0</span><span class=\\"token punctuation\\">;</span> i <span class=\\"token operator\\">&lt;</span> <span class=\\"token number\\">100</span><span class=\\"token punctuation\\">;</span> i<span class=\\"token operator\\">++</span><span class=\\"token punctuation\\">)</span> <span class=\\"token punctuation\\">{</span>\\n        <span class=\\"token comment\\">// 不能设置过期时间</span>\\n        jedis<span class=\\"token punctuation\\">.</span><span class=\\"token function\\">pfadd</span><span class=\\"token punctuation\\">(</span><span class=\\"token string\\">\\"uv\\"</span><span class=\\"token punctuation\\">,</span> <span class=\\"token string\\">\\"user_\\"</span> <span class=\\"token operator\\">+</span> i<span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">;</span>\\n        jedis<span class=\\"token punctuation\\">.</span><span class=\\"token function\\">pfadd</span><span class=\\"token punctuation\\">(</span><span class=\\"token string\\">\\"uv\\"</span><span class=\\"token punctuation\\">,</span> <span class=\\"token string\\">\\"user_\\"</span> <span class=\\"token operator\\">+</span> i<span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">;</span>\\n    <span class=\\"token punctuation\\">}</span>\\n    <span class=\\"token comment\\">// 读取uv 理论值是: 100</span>\\n    <span class=\\"token class-name\\">Long</span> uv <span class=\\"token operator\\">=</span> jedis<span class=\\"token punctuation\\">.</span><span class=\\"token function\\">pfcount</span><span class=\\"token punctuation\\">(</span><span class=\\"token string\\">\\"uv\\"</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">;</span>\\n    <span class=\\"token class-name\\">System</span><span class=\\"token punctuation\\">.</span>out<span class=\\"token punctuation\\">.</span><span class=\\"token function\\">println</span><span class=\\"token punctuation\\">(</span><span class=\\"token string\\">\\"uv: \\"</span> <span class=\\"token operator\\">+</span> uv<span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">;</span>\\n    <span class=\\"token comment\\">// 重复执行时，需要删除原先的</span>\\n    <span class=\\"token comment\\">// jedis.del(\\"uv\\");</span>\\n<span class=\\"token punctuation\\">}</span>\\n</code></pre><div class=\\"line-numbers\\" aria-hidden=\\"true\\"><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div></div></div>","autoDesc":true}');export{n as data};

import{_ as p}from"./plugin-vue_export-helper-x3n3nnut.js";import{o as e,c as _,d as o}from"./app-AuAuVshg.js";const t={},c=o("<p>基于构作的软件开发(Component-Based Software Development，CBSD)是一种基于分布对象技术、强调过可复用构件设计与构造软件系统的软件复用途径基于构件的软件系统中的构件可以是COTS (Commecial-Off-the-Shelf) 构件，也可以是通过其它途径获得的构件(如自行开发)。CBSD将软件开发的重点从程序编写转移到了基于已有构件的组装，以更快地构造系统，减轻用来支持和升级大型系统所需要的维护负担，从而降低软件开发的费用。</p><p>请围绕“基于构件的软件开发方法及其应用&quot;论题，依)从以下三个方面进行论述。</p><p>1.概要叙述你参与管理和开发的软件项目，以及你在其中所承担的主要工作。</p><p>2.详细论述基于构件的软件开发方法的主要过程。</p><p>3.结合你具体参与管理和开发的实际项目，请说明具体实施过程以及碰到的主要问题。</p><p>4.概要叙述你所参与管理或开发的软件项目以及你在其中所承担的主要工作。</p><p>5.详细论述基于构件的软件开发方法的主要过程。</p><p>CBSD方法使得软件开发不再一切从头开发，开发的过程就是构件组装的过程，维护的过程就是构件升级替换和扩充的过程，其优点是提高了软件开发的效率；构件可由一方定义其规格说明，被另一方实现然后供给第三方使用，CBSD允许多个项目同时开发降低了费用，提高了可维护性，可实现分步提交软件产品。CBSD方法由软件的需求分析和定义、架构设计、构件库的建立、应用软件构建、测试和发布五个阶段组成。</p><p>(1)需求分析和定义：在这阶段需要重点说明系统跟曾经开发过的其他系统类似，具有大量可复用的成熟构件。</p><p>(2)架构设计：结合实际项目，根据上一阶段获得的需求和定义提出架构模型。</p><p>(3)构件库的建立：这是本论文主题的重点。构件的获得有四个途径：1)从现有构件中获得符合要求的构件，直接使用或作适应性修改，得到可复用的构件。2)通过遗留工程(Legacy Engineering)，将具有潜在复用价值的构件提取出来，得到可复用的构件。3)从市场上购买现成的商业构件，即COTS（Commercial off-The-Shell) 构件。4)开发符合要求的新构件。而构件库的检索方法有3种：1)基于关键字的检索。2)刻面检索法。3)超文本检索法。</p><p>(4)应用软件构建：构建过程主要是构件的组装过程，而大致有三种技术：</p><p>​ 1)基于功能的组装技术。基于功能的组装技术采用子程序调用和参数传递的方式将构件组装起来。它要求库中的构件以子程序/过程/函数的形式出现，并且接口说明必须清晰。当使用这种组装技术进行软件开发时，开发人员首先要对新系统进行功能分解，将系统分解为强内聚、松耦合的功能模块；然后根据各模块的功能需求提取构件，进行适应性修改后，再挂接到上述功能分解框架中。</p><p>​ 2)基于数据的组装技术。基于数据的组装技术首先根据当前软件问题的核心数据结构设计出一个框架，然后根据框架中各结点的需求提取构件并进行适应性修改，再将构件逐个分配至框架中的适当位置。此后构件的组装方式仍然是传统的子程序调用与参数传递。这种组装技术也要求库中构件以子程序形式出现，但它所依赖的软件设计方法不再是功能分解，而是面向数据的设计方法，例如，Jackson 系统开发方法。</p><p>​ 3)面向对象的组装技术。由于封装和继承特征，面向对象方法比其他软件开发方法更适合支持软件复用。在面向对象的软件开发方法中，如果从类库中检索出来的基类能够完全满足新系统的需求，则可以直接应用，否则，必须以基类为父类，生成相应的子类，以满足新系统的需求。</p><p>(5) 测试和发布：可以是一个增量和迭代的过程。</p><p>可能遇到的问题包括：构件不适配；连接子不适配；从遗留工程中抽取的构件性能不满足；购买现成的商业构件无法完美匹配等</p>",17),n=[c];function a(r,s){return e(),_("div",null,n)}const m=p(t,[["render",a],["__file","论基于构件的软件开发方法及其应用.html.vue"]]);export{m as default};

const e=JSON.parse('{"key":"v-3814bfe3","path":"/home/%E7%B3%BB%E7%BB%9F%E8%AE%BE%E8%AE%A1/JWT%E5%9F%BA%E6%9C%AC%E6%A6%82%E5%BF%B5%E8%AF%A6%E8%A7%A3.html","title":"JWT基础概念详解","lang":"zh-CN","frontmatter":{"title":"JWT基础概念详解","description":"什么是 JWT? JWT （JSON Web Token） 是目前最流行的跨域认证解决方案，是一种基于 Token 的认证授权机制。 从 JWT 的全称可以看出，JWT 本身也是 Token，一种规范化之后的 JSON 结构的 Token。 JWT 自身包含了身份验证所需要的所有信息，因此，我们的服务器不需要存储 Session 信息。这显然增加了系统的可用性和伸缩性，大大减轻了服务端的压力。 可以看出JWT 更符合设计 RESTful API 时的「Stateless（无状态）」原则&nbsp;。","head":[["meta",{"property":"og:url","content":"https://mister-hope.github.io/home/%E7%B3%BB%E7%BB%9F%E8%AE%BE%E8%AE%A1/JWT%E5%9F%BA%E6%9C%AC%E6%A6%82%E5%BF%B5%E8%AF%A6%E8%A7%A3.html"}],["meta",{"property":"og:site_name","content":"Jef Blog"}],["meta",{"property":"og:title","content":"JWT基础概念详解"}],["meta",{"property":"og:description","content":"什么是 JWT? JWT （JSON Web Token） 是目前最流行的跨域认证解决方案，是一种基于 Token 的认证授权机制。 从 JWT 的全称可以看出，JWT 本身也是 Token，一种规范化之后的 JSON 结构的 Token。 JWT 自身包含了身份验证所需要的所有信息，因此，我们的服务器不需要存储 Session 信息。这显然增加了系统的可用性和伸缩性，大大减轻了服务端的压力。 可以看出JWT 更符合设计 RESTful API 时的「Stateless（无状态）」原则&nbsp;。"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:image","content":"https://mister-hope.github.io/"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2024-01-03T01:39:20.000Z"}],["meta",{"name":"twitter:card","content":"summary_large_image"}],["meta",{"name":"twitter:image:alt","content":"JWT基础概念详解"}],["meta",{"property":"article:author","content":"Jef"}],["meta",{"property":"article:modified_time","content":"2024-01-03T01:39:20.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"JWT基础概念详解\\",\\"image\\":[\\"https://mister-hope.github.io/\\"],\\"dateModified\\":\\"2024-01-03T01:39:20.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"Jef\\",\\"url\\":\\"https://mister-hope.com\\"}]}"]]},"headers":[{"level":2,"title":"什么是 JWT?","slug":"什么是-jwt","link":"#什么是-jwt","children":[]},{"level":2,"title":"JWT 由哪些部分组成？","slug":"jwt-由哪些部分组成","link":"#jwt-由哪些部分组成","children":[]},{"level":2,"title":"如何基于 JWT 进行身份验证？","slug":"如何基于-jwt-进行身份验证","link":"#如何基于-jwt-进行身份验证","children":[]},{"level":2,"title":"如何防止 JWT 被篡改？","slug":"如何防止-jwt-被篡改","link":"#如何防止-jwt-被篡改","children":[]},{"level":2,"title":"如何加强 JWT 的安全性？","slug":"如何加强-jwt-的安全性","link":"#如何加强-jwt-的安全性","children":[]}],"git":{"createdTime":1703686387000,"updatedTime":1704245960000,"contributors":[{"name":"tufujie","email":"tufj@hua-cloud.com.cn","commits":3},{"name":"tufujie","email":"jef.tu@foxmail.com","commits":1}]},"readingTime":{"minutes":5.39,"words":1617},"filePathRelative":"home/系统设计/JWT基本概念详解.md","localizedDate":"2023年12月27日","excerpt":"<h2> 什么是 JWT?</h2>\\n<p>JWT （JSON Web Token） 是目前最流行的跨域认证解决方案，是一种基于 Token 的认证授权机制。 从 JWT 的全称可以看出，JWT 本身也是 Token，一种规范化之后的 JSON 结构的 Token。</p>\\n<p>JWT 自身包含了身份验证所需要的所有信息，因此，我们的服务器不需要存储 Session 信息。这显然增加了系统的可用性和伸缩性，大大减轻了服务端的压力。</p>\\n<p>可以看出<strong>JWT 更符合设计 RESTful API 时的「Stateless（无状态）」原则</strong>&nbsp;。</p>","autoDesc":true}');export{e as data};

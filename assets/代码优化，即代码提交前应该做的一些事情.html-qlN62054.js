import{_ as n}from"./plugin-vue_export-helper-x3n3nnut.js";import{o as s,c as a,d as t}from"./app-AuAuVshg.js";const p={},e=t(`<h2 id="一、自测" tabindex="-1"><a class="header-anchor" href="#一、自测" aria-hidden="true">#</a> <strong>一、自测</strong></h2><ul><li>单元测试</li><li>接口测试（推荐使用HttpClient测试，可以对controller类进行比较完善的测试，包括入参和出参，可以较好的验证数据是否准确，也便于团队复用某些接口的测试）</li></ul><h2 id="二、代码优化" tabindex="-1"><a class="header-anchor" href="#二、代码优化" aria-hidden="true">#</a> <strong>二、代码优化</strong></h2><ol><li>review自己的代码，判断是否是最优的写法（性能、逻辑（有没有很复杂的逻辑，有没有很别扭的逻辑）、可读性等方面考虑）</li><li>IDEA代码复杂度检测插件MetricsReloaded分析，右击Analyze-&gt;Calculate Metrics，也可以设置快捷键为<mark>Ctrl + Shift + Alt + M</mark>，提交时要达到<mark>low complexity</mark>级别</li><li>IDEA右键自带Analyze分析，右击Analyze-&gt;Inspect Code，此时，会扫描出比较多的问题项，包括但不限于：Alibaba编码规范扫描，设置快捷键为<mark>Ctrl + Shift + Alt + I</mark>，重点关注：Warning -&gt; Java</li><li>Alibaba编码规约扫描，设置快捷键为<mark>Ctrl + Shift + Alt + J</mark></li><li>SonarLint分析，设置快捷键为<mark>Ctrl + Shift + Alt + S</mark></li><li>这个步骤有涉及到比较大的优化改动点的话，就继续从自测开始，没有就继续往下执行</li></ol><p>优化效果示例：</p><p><strong>优化前：</strong></p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">Main</span> <span class="token punctuation">{</span>

    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token class-name">String</span> a <span class="token operator">=</span> <span class="token string">&quot;test&quot;</span><span class="token punctuation">;</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token string">&quot;test&quot;</span><span class="token punctuation">.</span><span class="token function">equals</span><span class="token punctuation">(</span>a<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;test&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>

<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>其中阿里巴巴有优化一部分，SonarLint会建议优化一部分</p><p><strong>优化后：</strong></p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">Main</span> <span class="token punctuation">{</span>

    <span class="token keyword">private</span> <span class="token keyword">static</span> <span class="token class-name">Logger</span> logger <span class="token operator">=</span> <span class="token class-name">Logger</span><span class="token punctuation">.</span><span class="token function">getLogger</span><span class="token punctuation">(</span><span class="token class-name">Main</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

    <span class="token keyword">private</span> <span class="token keyword">static</span> <span class="token keyword">final</span> <span class="token class-name">String</span> <span class="token constant">KEY</span> <span class="token operator">=</span> <span class="token string">&quot;test&quot;</span><span class="token punctuation">;</span>

    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token class-name">String</span> a <span class="token operator">=</span> <span class="token string">&quot;test&quot;</span><span class="token punctuation">;</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token constant">KEY</span><span class="token punctuation">.</span><span class="token function">equals</span><span class="token punctuation">(</span>a<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            logger<span class="token punctuation">.</span><span class="token function">info</span><span class="token punctuation">(</span><span class="token string">&quot;test&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>

<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="三、结构调整" tabindex="-1"><a class="header-anchor" href="#三、结构调整" aria-hidden="true">#</a> <strong>三、结构调整</strong></h2><p>项目没有此约束可忽略，CleanArchTest单元测试，验证是否符合cola架构，位置不对的话移动位置即可</p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token keyword">package</span> <span class="token namespace">com<span class="token punctuation">.</span>xgd<span class="token punctuation">.</span>overseas<span class="token punctuation">.</span>merchant<span class="token punctuation">.</span>user</span><span class="token punctuation">;</span>

<span class="token keyword">import</span> <span class="token import"><span class="token namespace">com<span class="token punctuation">.</span>tngtech<span class="token punctuation">.</span>archunit<span class="token punctuation">.</span>core<span class="token punctuation">.</span>domain<span class="token punctuation">.</span></span><span class="token class-name">JavaClasses</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">com<span class="token punctuation">.</span>tngtech<span class="token punctuation">.</span>archunit<span class="token punctuation">.</span>core<span class="token punctuation">.</span>importer<span class="token punctuation">.</span></span><span class="token class-name">ClassFileImporter</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">com<span class="token punctuation">.</span>tngtech<span class="token punctuation">.</span>archunit<span class="token punctuation">.</span>core<span class="token punctuation">.</span>importer<span class="token punctuation">.</span></span><span class="token class-name">ImportOption</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">org<span class="token punctuation">.</span>junit<span class="token punctuation">.</span>jupiter<span class="token punctuation">.</span>api<span class="token punctuation">.</span></span><span class="token class-name">Test</span></span><span class="token punctuation">;</span>

<span class="token keyword">import</span> <span class="token keyword">static</span> <span class="token import static"><span class="token namespace">com<span class="token punctuation">.</span>tngtech<span class="token punctuation">.</span>archunit<span class="token punctuation">.</span>library<span class="token punctuation">.</span></span><span class="token class-name">Architectures</span><span class="token punctuation">.</span><span class="token static">layeredArchitecture</span></span><span class="token punctuation">;</span>

<span class="token doc-comment comment">/**
 * 用于检测各层代码是否符合cola架构的依赖关系
 *
 * <span class="token keyword">@author</span> Jef
 * <span class="token keyword">@date</span> 2022/8/16 15:17
 */</span>
<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">CleanArchTest</span> <span class="token punctuation">{</span>

    <span class="token comment">// 请将\${package}替换为你的项目包名</span>
    <span class="token keyword">private</span> <span class="token keyword">static</span> <span class="token keyword">final</span> <span class="token class-name">String</span> groupAndArtifact <span class="token operator">=</span> <span class="token string">&quot;com.merchant.user&quot;</span><span class="token punctuation">;</span>

    <span class="token annotation punctuation">@Test</span>
    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">protect_clean_arch</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token class-name">JavaClasses</span> classes <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">ClassFileImporter</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
        <span class="token punctuation">.</span><span class="token function">withImportOption</span><span class="token punctuation">(</span><span class="token class-name">ImportOption<span class="token punctuation">.</span>Predefined</span><span class="token punctuation">.</span><span class="token constant">DO_NOT_INCLUDE_TESTS</span><span class="token punctuation">)</span>
        <span class="token punctuation">.</span><span class="token function">importPackages</span><span class="token punctuation">(</span>groupAndArtifact<span class="token punctuation">)</span><span class="token punctuation">;</span>


        <span class="token function">layeredArchitecture</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
        <span class="token punctuation">.</span><span class="token function">consideringAllDependencies</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
        <span class="token punctuation">.</span><span class="token function">layer</span><span class="token punctuation">(</span><span class="token string">&quot;adapter&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">definedBy</span><span class="token punctuation">(</span>groupAndArtifact <span class="token operator">+</span> <span class="token string">&quot;.adapter..&quot;</span><span class="token punctuation">)</span>
        <span class="token punctuation">.</span><span class="token function">layer</span><span class="token punctuation">(</span><span class="token string">&quot;application&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">definedBy</span><span class="token punctuation">(</span>groupAndArtifact <span class="token operator">+</span> <span class="token string">&quot;.application..&quot;</span><span class="token punctuation">)</span>
        <span class="token punctuation">.</span><span class="token function">layer</span><span class="token punctuation">(</span><span class="token string">&quot;domain&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">definedBy</span><span class="token punctuation">(</span>groupAndArtifact <span class="token operator">+</span> <span class="token string">&quot;.domain..&quot;</span><span class="token punctuation">)</span>
        <span class="token punctuation">.</span><span class="token function">layer</span><span class="token punctuation">(</span><span class="token string">&quot;client&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">definedBy</span><span class="token punctuation">(</span>groupAndArtifact <span class="token operator">+</span> <span class="token string">&quot;.client..&quot;</span><span class="token punctuation">)</span>
        <span class="token punctuation">.</span><span class="token function">layer</span><span class="token punctuation">(</span><span class="token string">&quot;infra&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">definedBy</span><span class="token punctuation">(</span>groupAndArtifact <span class="token operator">+</span> <span class="token string">&quot;.infra..&quot;</span><span class="token punctuation">)</span>
        <span class="token comment">// adapter层不应该被任何层依赖</span>
        <span class="token punctuation">.</span><span class="token function">whereLayer</span><span class="token punctuation">(</span><span class="token string">&quot;adapter&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">mayNotBeAccessedByAnyLayer</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
        <span class="token punctuation">.</span><span class="token function">whereLayer</span><span class="token punctuation">(</span><span class="token string">&quot;client&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">mayOnlyBeAccessedByLayers</span><span class="token punctuation">(</span><span class="token string">&quot;application&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;adapter&quot;</span><span class="token punctuation">)</span>
        <span class="token comment">// domain 层仅能被application 和 infrastructure层依赖</span>
        <span class="token punctuation">.</span><span class="token function">whereLayer</span><span class="token punctuation">(</span><span class="token string">&quot;domain&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">mayOnlyBeAccessedByLayers</span><span class="token punctuation">(</span><span class="token string">&quot;application&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;infra&quot;</span><span class="token punctuation">)</span>
        <span class="token punctuation">.</span><span class="token function">as</span><span class="token punctuation">(</span><span class="token string">&quot;The layer dependencies must be respected&quot;</span><span class="token punctuation">)</span>
        <span class="token punctuation">.</span><span class="token function">because</span><span class="token punctuation">(</span><span class="token string">&quot;we must follow the Clean Architecture principle&quot;</span><span class="token punctuation">)</span>
        <span class="token punctuation">.</span><span class="token function">check</span><span class="token punctuation">(</span>classes<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="四、测试编译" tabindex="-1"><a class="header-anchor" href="#四、测试编译" aria-hidden="true">#</a> <strong>四、测试编译</strong></h2><p>执行 <strong>mvn clean test</strong>，防止单元测试影响流水线运行</p><p>以上都通过后就代码完美率达到99.9999%，基本无bug，可以开开心心的提交代码了。</p>`,16),o=[e];function c(i,l){return s(),a("div",null,o)}const r=n(p,[["render",c],["__file","代码优化，即代码提交前应该做的一些事情.html.vue"]]);export{r as default};

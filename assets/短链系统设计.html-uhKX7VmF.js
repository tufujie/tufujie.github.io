import{_ as a}from"./plugin-vue_export-helper-x3n3nnut.js";import{o as e,c as h,d as r}from"./app-AuAuVshg.js";const d={},i=r('<h2 id="_1-什么是短链接" tabindex="-1"><a class="header-anchor" href="#_1-什么是短链接" aria-hidden="true">#</a> 1.什么是短链接？</h2><h2 id="_2-为什么需要url短链接" tabindex="-1"><a class="header-anchor" href="#_2-为什么需要url短链接" aria-hidden="true">#</a> 2.为什么需要URL短链接</h2><h2 id="_3-系统要求和目标" tabindex="-1"><a class="header-anchor" href="#_3-系统要求和目标" aria-hidden="true">#</a> 3.系统要求和目标</h2><h2 id="_3-1-功能要求" tabindex="-1"><a class="header-anchor" href="#_3-1-功能要求" aria-hidden="true">#</a> 3.1 功能要求</h2><h3 id="_3-2-非功能要求" tabindex="-1"><a class="header-anchor" href="#_3-2-非功能要求" aria-hidden="true">#</a> 3.2 非功能要求</h3><h3 id="_3-3-用户体验优化" tabindex="-1"><a class="header-anchor" href="#_3-3-用户体验优化" aria-hidden="true">#</a> 3.3 用户体验优化</h3><h2 id="_4-容量要求和限制" tabindex="-1"><a class="header-anchor" href="#_4-容量要求和限制" aria-hidden="true">#</a> 4.容量要求和限制</h2><h3 id="_4-1-访问量估计" tabindex="-1"><a class="header-anchor" href="#_4-1-访问量估计" aria-hidden="true">#</a> 4.1 访问量估计</h3><h3 id="_4-2-存储估计" tabindex="-1"><a class="header-anchor" href="#_4-2-存储估计" aria-hidden="true">#</a> 4.2 存储估计</h3><h3 id="_4-3-带宽估计" tabindex="-1"><a class="header-anchor" href="#_4-3-带宽估计" aria-hidden="true">#</a> 4.3 带宽估计</h3><h3 id="_4-4-内存预估" tabindex="-1"><a class="header-anchor" href="#_4-4-内存预估" aria-hidden="true">#</a> 4.4 内存预估</h3><h2 id="_5-系统api设计" tabindex="-1"><a class="header-anchor" href="#_5-系统api设计" aria-hidden="true">#</a> 5.系统API设计</h2><h3 id="_5-1-创建短链接接口" tabindex="-1"><a class="header-anchor" href="#_5-1-创建短链接接口" aria-hidden="true">#</a> 5.1 创建短链接接口</h3><h3 id="_5-2-删除短链接" tabindex="-1"><a class="header-anchor" href="#_5-2-删除短链接" aria-hidden="true">#</a> 5.2 删除短链接</h3><h2 id="_6-数据库设计" tabindex="-1"><a class="header-anchor" href="#_6-数据库设计" aria-hidden="true">#</a> 6.数据库设计</h2><h2 id="_7-系统基本设计与算法" tabindex="-1"><a class="header-anchor" href="#_7-系统基本设计与算法" aria-hidden="true">#</a> 7.系统基本设计与算法</h2><h3 id="_7-1-对原url进行编码" tabindex="-1"><a class="header-anchor" href="#_7-1-对原url进行编码" aria-hidden="true">#</a> 7.1 对原URL进行编码</h3><h3 id="_7-2-离线生成密钥" tabindex="-1"><a class="header-anchor" href="#_7-2-离线生成密钥" aria-hidden="true">#</a> 7.2 离线生成密钥</h3><h3 id="_7-2-1-并发问题" tabindex="-1"><a class="header-anchor" href="#_7-2-1-并发问题" aria-hidden="true">#</a> 7.2.1 并发问题</h3><h3 id="_7-2-2-单点故障问题" tabindex="-1"><a class="header-anchor" href="#_7-2-2-单点故障问题" aria-hidden="true">#</a> 7.2.2 单点故障问题</h3><h3 id="_7-2-3-如何完成密钥的查找" tabindex="-1"><a class="header-anchor" href="#_7-2-3-如何完成密钥的查找" aria-hidden="true">#</a> 7.2.3 如何完成密钥的查找</h3><h2 id="_8-数据分区和复制" tabindex="-1"><a class="header-anchor" href="#_8-数据分区和复制" aria-hidden="true">#</a> 8.数据分区和复制</h2><h3 id="_8-1-基于范围分区" tabindex="-1"><a class="header-anchor" href="#_8-1-基于范围分区" aria-hidden="true">#</a> 8.1 基于范围分区</h3><h3 id="_8-2-基于hash值分区" tabindex="-1"><a class="header-anchor" href="#_8-2-基于hash值分区" aria-hidden="true">#</a> 8.2 基于hash值分区</h3><h2 id="_9-缓存" tabindex="-1"><a class="header-anchor" href="#_9-缓存" aria-hidden="true">#</a> 9.缓存</h2><h3 id="_9-1-缓存容量" tabindex="-1"><a class="header-anchor" href="#_9-1-缓存容量" aria-hidden="true">#</a> 9.1 缓存容量</h3><h3 id="_9-2-缓存淘汰策略" tabindex="-1"><a class="header-anchor" href="#_9-2-缓存淘汰策略" aria-hidden="true">#</a> 9.2 缓存淘汰策略</h3><h3 id="_9-3-如何更新缓存" tabindex="-1"><a class="header-anchor" href="#_9-3-如何更新缓存" aria-hidden="true">#</a> 9.3 如何更新缓存</h3><h2 id="_10-负载均衡" tabindex="-1"><a class="header-anchor" href="#_10-负载均衡" aria-hidden="true">#</a> 10.负载均衡</h2><h3 id="_10-1-负载均衡的位置选取" tabindex="-1"><a class="header-anchor" href="#_10-1-负载均衡的位置选取" aria-hidden="true">#</a> 10.1 负载均衡的位置选取</h3><h3 id="_10-2-负载均衡策略" tabindex="-1"><a class="header-anchor" href="#_10-2-负载均衡策略" aria-hidden="true">#</a> 10.2 负载均衡策略</h3><h2 id="_11-数据清除策略" tabindex="-1"><a class="header-anchor" href="#_11-数据清除策略" aria-hidden="true">#</a> 11.数据清除策略</h2>',32),n=[i];function _(t,c){return e(),h("div",null,n)}const l=a(d,[["render",_],["__file","短链系统设计.html.vue"]]);export{l as default};

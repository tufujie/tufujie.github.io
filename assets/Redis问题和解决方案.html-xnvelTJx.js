const e=JSON.parse('{"key":"v-2771e2db","path":"/home/%E6%95%B0%E6%8D%AE%E5%BA%93/Redis/Redis%E9%97%AE%E9%A2%98%E5%92%8C%E8%A7%A3%E5%86%B3%E6%96%B9%E6%A1%88.html","title":"Redis问题和解决方案","lang":"zh-CN","frontmatter":{"title":"Redis问题和解决方案","description":"缓存雪崩 定义 缓存在同一个时间大量过期，导致大量的请求到了数据库，导致数据库崩溃 产生原因 设置了相同的过期时间 解决方案 设置随机的过期时间 设置过期时间为几分钟 使用互斥锁，但是影响并发量 缓存不设置过期时间 会产生脏数据，解决方式是活动全部结束时清除数据。 缓存穿透","head":[["meta",{"property":"og:url","content":"https://mister-hope.github.io/home/%E6%95%B0%E6%8D%AE%E5%BA%93/Redis/Redis%E9%97%AE%E9%A2%98%E5%92%8C%E8%A7%A3%E5%86%B3%E6%96%B9%E6%A1%88.html"}],["meta",{"property":"og:site_name","content":"Jef Blog"}],["meta",{"property":"og:title","content":"Redis问题和解决方案"}],["meta",{"property":"og:description","content":"缓存雪崩 定义 缓存在同一个时间大量过期，导致大量的请求到了数据库，导致数据库崩溃 产生原因 设置了相同的过期时间 解决方案 设置随机的过期时间 设置过期时间为几分钟 使用互斥锁，但是影响并发量 缓存不设置过期时间 会产生脏数据，解决方式是活动全部结束时清除数据。 缓存穿透"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2023-12-28T02:46:35.000Z"}],["meta",{"property":"article:author","content":"Jef"}],["meta",{"property":"article:modified_time","content":"2023-12-28T02:46:35.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"Redis问题和解决方案\\",\\"image\\":[\\"\\"],\\"dateModified\\":\\"2023-12-28T02:46:35.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"Jef\\",\\"url\\":\\"https://mister-hope.com\\"}]}"]]},"headers":[{"level":2,"title":"缓存雪崩","slug":"缓存雪崩","link":"#缓存雪崩","children":[{"level":3,"title":"定义","slug":"定义","link":"#定义","children":[]},{"level":3,"title":"产生原因","slug":"产生原因","link":"#产生原因","children":[]},{"level":3,"title":"解决方案","slug":"解决方案","link":"#解决方案","children":[]}]},{"level":2,"title":"缓存穿透","slug":"缓存穿透","link":"#缓存穿透","children":[{"level":3,"title":"定义","slug":"定义-1","link":"#定义-1","children":[]},{"level":3,"title":"解决方案","slug":"解决方案-1","link":"#解决方案-1","children":[]}]},{"level":2,"title":"缓存击穿","slug":"缓存击穿","link":"#缓存击穿","children":[{"level":3,"title":"定义","slug":"定义-2","link":"#定义-2","children":[]},{"level":3,"title":"产生原因","slug":"产生原因-1","link":"#产生原因-1","children":[]},{"level":3,"title":"解决方案","slug":"解决方案-2","link":"#解决方案-2","children":[]}]}],"git":{"createdTime":1702465950000,"updatedTime":1703731595000,"contributors":[{"name":"tufujie","email":"tufj@hua-cloud.com.cn","commits":2}]},"readingTime":{"minutes":1.05,"words":315},"filePathRelative":"home/数据库/Redis/Redis问题和解决方案.md","localizedDate":"2023年12月13日","excerpt":"<h2> 缓存雪崩</h2>\\n<h3> 定义</h3>\\n<p>缓存在同一个时间大量过期，导致大量的请求到了数据库，导致数据库崩溃</p>\\n<h3> 产生原因</h3>\\n<p>设置了相同的过期时间</p>\\n<h3> 解决方案</h3>\\n<ol>\\n<li>\\n<p>设置随机的过期时间</p>\\n<ol>\\n<li>设置过期时间为几分钟</li>\\n</ol>\\n</li>\\n<li>\\n<p>使用互斥锁，但是影响并发量</p>\\n</li>\\n<li>\\n<p>缓存不设置过期时间</p>\\n<ol>\\n<li>会产生脏数据，解决方式是活动全部结束时清除数据。</li>\\n</ol>\\n</li>\\n</ol>\\n<h2> 缓存穿透</h2>","autoDesc":true}');export{e as data};

const s=JSON.parse('{"key":"v-a5b93c2c","path":"/home/Java/jdk8/jdk8%E5%B8%B8%E7%94%A8%E7%A4%BA%E4%BE%8B.html","title":"jdk8常用示例","lang":"zh-CN","frontmatter":{"title":"jdk8常用示例","description":"stream filter filter（过滤筛选功能） 内部就是Predicate接口。惰性求值。 集合的筛选 对集合进行过滤操作，满足条件的会被添加到过滤后的集合中 List&lt;User&gt; users = BasicList.getUserList(); ListUtil.systemPrintUserList(users, \\"未筛选之前user集合=\\"); List&lt;User&gt; userFilterList = users.stream().filter(obj -&gt; BasicConstant.USER_NAME.equals(obj.getName())).collect(Collectors.toList()); ListUtil.systemPrintUserList(userFilterList, \\"筛选之后user集合=\\");","head":[["meta",{"property":"og:url","content":"https://mister-hope.github.io/home/Java/jdk8/jdk8%E5%B8%B8%E7%94%A8%E7%A4%BA%E4%BE%8B.html"}],["meta",{"property":"og:site_name","content":"Jef Blog"}],["meta",{"property":"og:title","content":"jdk8常用示例"}],["meta",{"property":"og:description","content":"stream filter filter（过滤筛选功能） 内部就是Predicate接口。惰性求值。 集合的筛选 对集合进行过滤操作，满足条件的会被添加到过滤后的集合中 List&lt;User&gt; users = BasicList.getUserList(); ListUtil.systemPrintUserList(users, \\"未筛选之前user集合=\\"); List&lt;User&gt; userFilterList = users.stream().filter(obj -&gt; BasicConstant.USER_NAME.equals(obj.getName())).collect(Collectors.toList()); ListUtil.systemPrintUserList(userFilterList, \\"筛选之后user集合=\\");"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2023-12-30T12:37:15.000Z"}],["meta",{"property":"article:author","content":"Jef"}],["meta",{"property":"article:modified_time","content":"2023-12-30T12:37:15.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"jdk8常用示例\\",\\"image\\":[\\"\\"],\\"dateModified\\":\\"2023-12-30T12:37:15.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"Jef\\",\\"url\\":\\"https://mister-hope.com\\"}]}"]]},"headers":[{"level":2,"title":"stream","slug":"stream","link":"#stream","children":[{"level":3,"title":"filter","slug":"filter","link":"#filter","children":[]},{"level":3,"title":"map","slug":"map","link":"#map","children":[]},{"level":3,"title":"groupingBy","slug":"groupingby","link":"#groupingby","children":[]},{"level":3,"title":"toMap","slug":"tomap","link":"#tomap","children":[]}]},{"level":2,"title":"Consumer","slug":"consumer","link":"#consumer","children":[]},{"level":2,"title":"Function","slug":"function","link":"#function","children":[]},{"level":2,"title":"Supplier","slug":"supplier","link":"#supplier","children":[]},{"level":2,"title":"Predicate","slug":"predicate","link":"#predicate","children":[]}],"git":{"createdTime":1703240737000,"updatedTime":1703939835000,"contributors":[{"name":"tufujie","email":"jef.tu@foxmail.com","commits":1},{"name":"tufujie","email":"tufj@hua-cloud.com.cn","commits":1}]},"readingTime":{"minutes":2.61,"words":782},"filePathRelative":"home/Java/jdk8/jdk8常用示例.md","localizedDate":"2023年12月22日","excerpt":"<h2> stream</h2>\\n<h3> filter</h3>\\n<ul>\\n<li>\\n<p>filter（过滤筛选功能）</p>\\n</li>\\n<li>\\n<p>内部就是Predicate接口。惰性求值。</p>\\n</li>\\n<li>\\n<p>集合的筛选</p>\\n</li>\\n<li>\\n<p>对集合进行过滤操作，满足条件的会被添加到过滤后的集合中</p>\\n</li>\\n</ul>\\n<div class=\\"language-java line-numbers-mode\\" data-ext=\\"java\\"><pre class=\\"language-java\\"><code><span class=\\"token class-name\\">List</span><span class=\\"token generics\\"><span class=\\"token punctuation\\">&lt;</span><span class=\\"token class-name\\">User</span><span class=\\"token punctuation\\">&gt;</span></span> users <span class=\\"token operator\\">=</span> <span class=\\"token class-name\\">BasicList</span><span class=\\"token punctuation\\">.</span><span class=\\"token function\\">getUserList</span><span class=\\"token punctuation\\">(</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">;</span>\\n<span class=\\"token class-name\\">ListUtil</span><span class=\\"token punctuation\\">.</span><span class=\\"token function\\">systemPrintUserList</span><span class=\\"token punctuation\\">(</span>users<span class=\\"token punctuation\\">,</span> <span class=\\"token string\\">\\"未筛选之前user集合=\\"</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">;</span>\\n<span class=\\"token class-name\\">List</span><span class=\\"token generics\\"><span class=\\"token punctuation\\">&lt;</span><span class=\\"token class-name\\">User</span><span class=\\"token punctuation\\">&gt;</span></span> userFilterList <span class=\\"token operator\\">=</span> users<span class=\\"token punctuation\\">.</span><span class=\\"token function\\">stream</span><span class=\\"token punctuation\\">(</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">.</span><span class=\\"token function\\">filter</span><span class=\\"token punctuation\\">(</span>obj <span class=\\"token operator\\">-&gt;</span> <span class=\\"token class-name\\">BasicConstant</span><span class=\\"token punctuation\\">.</span><span class=\\"token constant\\">USER_NAME</span><span class=\\"token punctuation\\">.</span><span class=\\"token function\\">equals</span><span class=\\"token punctuation\\">(</span>obj<span class=\\"token punctuation\\">.</span><span class=\\"token function\\">getName</span><span class=\\"token punctuation\\">(</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">.</span><span class=\\"token function\\">collect</span><span class=\\"token punctuation\\">(</span><span class=\\"token class-name\\">Collectors</span><span class=\\"token punctuation\\">.</span><span class=\\"token function\\">toList</span><span class=\\"token punctuation\\">(</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">;</span>\\n<span class=\\"token class-name\\">ListUtil</span><span class=\\"token punctuation\\">.</span><span class=\\"token function\\">systemPrintUserList</span><span class=\\"token punctuation\\">(</span>userFilterList<span class=\\"token punctuation\\">,</span> <span class=\\"token string\\">\\"筛选之后user集合=\\"</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">;</span>\\n</code></pre><div class=\\"line-numbers\\" aria-hidden=\\"true\\"><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div></div></div>","autoDesc":true}');export{s as data};

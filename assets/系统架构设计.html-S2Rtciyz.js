const e=JSON.parse('{"key":"v-68b5fa0f","path":"/home/%E7%B3%BB%E7%BB%9F%E6%9E%B6%E6%9E%84%E8%AE%BE%E8%AE%A1.html","title":"系统架构设计","lang":"zh-CN","frontmatter":{"title":"系统架构设计","description":"架构基础 系统泛指由一群有关联的个体组成，根据某种规则运作，能完成个别元件不能单独完成的工作的群体，它的意思是\\"总体\\"\\"整体\\"或\\"联盟\\"。 子系统也是由一群有关联的个体所组成的系统，多半是更大系统中的一部分。 软件模块（Module）是一套一致而互相紧密关联的软件组织。它分别包含了程序和数据结构两部分。 软件组件定义为自包含的、可编程的、可重用的、与语言无关的软件单元，软件组件可以很容易被用于组装应用程序中。 软件框架（Software Framework），通常指的是为了实现某个业界标准或完成特定基本任务的软件组件规范，也指为了实现某个软件组件规范时，提供规范所要求之基础功能的软件产品。 软件架构指软件系统的顶层结构。 同一软件系统从不同的角度进行分解，会得到不同的架构。 架构设计的主要目的是为了解决软件系统复杂度带来的问题。 主要的软件系统复杂度有高性能、高可用、可扩展、低成本、安全、规模几种。","head":[["meta",{"property":"og:url","content":"https://mister-hope.github.io/home/%E7%B3%BB%E7%BB%9F%E6%9E%B6%E6%9E%84%E8%AE%BE%E8%AE%A1.html"}],["meta",{"property":"og:site_name","content":"Jef Blog"}],["meta",{"property":"og:title","content":"系统架构设计"}],["meta",{"property":"og:description","content":"架构基础 系统泛指由一群有关联的个体组成，根据某种规则运作，能完成个别元件不能单独完成的工作的群体，它的意思是\\"总体\\"\\"整体\\"或\\"联盟\\"。 子系统也是由一群有关联的个体所组成的系统，多半是更大系统中的一部分。 软件模块（Module）是一套一致而互相紧密关联的软件组织。它分别包含了程序和数据结构两部分。 软件组件定义为自包含的、可编程的、可重用的、与语言无关的软件单元，软件组件可以很容易被用于组装应用程序中。 软件框架（Software Framework），通常指的是为了实现某个业界标准或完成特定基本任务的软件组件规范，也指为了实现某个软件组件规范时，提供规范所要求之基础功能的软件产品。 软件架构指软件系统的顶层结构。 同一软件系统从不同的角度进行分解，会得到不同的架构。 架构设计的主要目的是为了解决软件系统复杂度带来的问题。 主要的软件系统复杂度有高性能、高可用、可扩展、低成本、安全、规模几种。"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2024-01-05T10:16:54.000Z"}],["meta",{"property":"article:author","content":"Jef"}],["meta",{"property":"article:modified_time","content":"2024-01-05T10:16:54.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"系统架构设计\\",\\"image\\":[\\"\\"],\\"dateModified\\":\\"2024-01-05T10:16:54.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"Jef\\",\\"url\\":\\"https://mister-hope.com\\"}]}"]]},"headers":[{"level":2,"title":"架构基础","slug":"架构基础","link":"#架构基础","children":[]},{"level":2,"title":"架构设计原则","slug":"架构设计原则","link":"#架构设计原则","children":[]},{"level":2,"title":"架构设计流程","slug":"架构设计流程","link":"#架构设计流程","children":[]},{"level":2,"title":"存储高性能","slug":"存储高性能","link":"#存储高性能","children":[]},{"level":2,"title":"计算高性能","slug":"计算高性能","link":"#计算高性能","children":[]},{"level":2,"title":"CAP","slug":"cap","link":"#cap","children":[]},{"level":2,"title":"FMEA","slug":"fmea","link":"#fmea","children":[]},{"level":2,"title":"存储高可用","slug":"存储高可用","link":"#存储高可用","children":[]},{"level":2,"title":"计算高可用","slug":"计算高可用","link":"#计算高可用","children":[]},{"level":2,"title":"业务高可用","slug":"业务高可用","link":"#业务高可用","children":[]},{"level":2,"title":"可扩展模式","slug":"可扩展模式","link":"#可扩展模式","children":[]},{"level":2,"title":"分层架构","slug":"分层架构","link":"#分层架构","children":[]},{"level":2,"title":"SOA架构","slug":"soa架构","link":"#soa架构","children":[]},{"level":2,"title":"微服务","slug":"微服务","link":"#微服务","children":[]},{"level":2,"title":"微内核架构","slug":"微内核架构","link":"#微内核架构","children":[]},{"level":2,"title":"消息队列设计实战","slug":"消息队列设计实战","link":"#消息队列设计实战","children":[]},{"level":2,"title":"互联网架构演进","slug":"互联网架构演进","link":"#互联网架构演进","children":[]},{"level":2,"title":"互联网架构模板","slug":"互联网架构模板","link":"#互联网架构模板","children":[]},{"level":2,"title":"架构重构","slug":"架构重构","link":"#架构重构","children":[]},{"level":2,"title":"开源系统","slug":"开源系统","link":"#开源系统","children":[]},{"level":2,"title":"高并发","slug":"高并发","link":"#高并发","children":[]}],"git":{"createdTime":1704449814000,"updatedTime":1704449814000,"contributors":[{"name":"tufujie","email":"tufj@hua-cloud.com.cn","commits":1}]},"readingTime":{"minutes":19.56,"words":5869},"filePathRelative":"home/系统架构设计.md","localizedDate":"2024年1月5日","excerpt":"<h2> 架构基础</h2>\\n<ul>\\n<li>\\n<p>系统泛指由一群有关联的个体组成，根据某种规则运作，能完成个别元件不能单独完成的工作的群体，它的意思是\\"总体\\"\\"整体\\"或\\"联盟\\"。</p>\\n</li>\\n<li>\\n<p>子系统也是由一群有关联的个体所组成的系统，多半是更大系统中的一部分。</p>\\n</li>\\n<li>\\n<p>软件模块（Module）是一套一致而互相紧密关联的软件组织。它分别包含了程序和数据结构两部分。</p>\\n</li>\\n<li>\\n<p>软件组件定义为自包含的、可编程的、可重用的、与语言无关的软件单元，软件组件可以很容易被用于组装应用程序中。</p>\\n</li>\\n<li>\\n<p>软件框架（Software Framework），通常指的是为了实现某个业界标准或完成特定基本任务的软件组件规范，也指为了实现某个软件组件规范时，提供规范所要求之基础功能的软件产品。</p>\\n</li>\\n<li>\\n<p>软件架构指软件系统的顶层结构。</p>\\n</li>\\n<li>\\n<p>同一软件系统从不同的角度进行分解，会得到不同的架构。</p>\\n</li>\\n<li>\\n<p>架构设计的主要目的是为了解决软件系统复杂度带来的问题。</p>\\n</li>\\n<li>\\n<p>主要的软件系统复杂度有<strong>高性能、高可用、可扩展、低成本、安全、规模</strong>几种。</p>\\n</li>\\n</ul>","autoDesc":true}');export{e as data};

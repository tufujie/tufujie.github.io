import{_ as n}from"./plugin-vue_export-helper-x3n3nnut.js";import{o as s,c as a,d as t}from"./app-AuAuVshg.js";const p={},o=t(`<h2 id="问题描述" tabindex="-1"><a class="header-anchor" href="#问题描述" aria-hidden="true">#</a> <strong>问题描述</strong></h2><p><strong>已知某个文件内包含大量电话号码，每个号码为8位数字，如何统计不同号码的个数？内存限制100M</strong></p><p>拓展：<mark>不同字符串的个数</mark></p><h2 id="思路分析" tabindex="-1"><a class="header-anchor" href="#思路分析" aria-hidden="true">#</a> <strong>思路分析</strong></h2><p>这类问题其实是求解数据重复的问题。对于这类问题，可以使用<strong>位图法</strong>处理</p><p>8位电话号码可以表示的范围为00000000～99999999。如果用 bit表示一个号码，那么总共需要1亿个bit，总共需要大约<strong>10MB</strong>的内存。</p><p>申请一个位图并初始化为0，然后遍历所有电话号码，<strong>把遍历到的电话号码对应的位图中的bit设置为1</strong>。当遍历完成后，如果bit值为1，则表示这个电话号码在文件中存在，否则这个bit对应的电话号码在文件中不存在。</p><p>最后这个<strong>位图中bit值为1的数量</strong>就是不同电话号码的个数了。</p><p>那么如何确定电话号码对应的是位图中的哪一位呢？</p><p>可以使用下面的方法来做<strong>电话号码和位图的映射</strong>。</p><p>00000000 对应位图最后一位：0×0000…000001。</p><p>00000001 对应位图倒数第二位：0×0000…0000010（1 向左移 1 位）。</p><p>00000002 对应位图倒数第三位：0×0000…0000100（1 向左移 2 位）。</p><p>……</p><p>00000012 对应位图的倒数第十三位：0×0000…0001 0000 0000 0000（1 向左移 12 位）。</p><p>也就是说，电话号码就是1这个数字左移的次数。</p><h2 id="具体实现" tabindex="-1"><a class="header-anchor" href="#具体实现" aria-hidden="true">#</a> <strong>具体实现</strong></h2><p>首先位图可以使用一个<strong>int数组</strong>来实现（在Java中int占用<strong>4byte</strong>）。</p><p>假设电话号码为 P，而通过电话号码获取位图中对应位置的方法为：</p><p><strong>第一步</strong>，因为int整数占用4*8=32bit，通过 <strong>P/32</strong> 就可以计算出该电话号码在 bitmap 数组中的下标，从而可以确定它对应的 bit 在数组中的位置。</p><p><strong>第二步</strong>，通过 <strong>P%32</strong> 就可以计算出这个电话号码在这个int数字中具体的bit的位置。只要把1向左移 <strong>P%32</strong> 位，然后把得到的值与这个数组中的值做或运算，就可以把这个电话号码在位图中对应的位设置为1。</p><p>以00000100号码为例。</p><ol><li>首先计算数组下标，100 / 32 = 3，得到数组下标位3。</li><li>然后计算电话号码在这个int数字中具体的bit的位置，100 % 32 = 4。取余为0为第1位，故取余为4为第5位，得到000...000010000</li><li>将位图中对应的位设置为 1，即arr[3] = arr[3] <strong>|</strong> 000..00010000。</li><li>这就将电话号码映射到了位图的某一位了。</li></ol><p>最后，统计位图中bit值为1的数量，便能得到不同电话号码的个数了。</p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">PhoneNumberKinds</span> <span class="token punctuation">{</span>

    <span class="token keyword">static</span> <span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">&gt;</span></span> numberList <span class="token operator">=</span> <span class="token class-name">Lists</span><span class="token punctuation">.</span><span class="token function">newArrayList</span><span class="token punctuation">(</span><span class="token string">&quot;00000000&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;00000000&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;00000001&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;00000002&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;00000003&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;00000100&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;99999999&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">//    static List&lt;String&gt; numberList = Lists.newArrayList(&quot;00000100&quot;);</span>

    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token comment">// &quot;00000000&quot; 到 &quot;99999999&quot;，共1亿个数字</span>
        <span class="token keyword">int</span><span class="token punctuation">[</span><span class="token punctuation">]</span> arr <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token keyword">int</span><span class="token punctuation">[</span><span class="token number">100000000</span> <span class="token operator">/</span> <span class="token number">32</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
        <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token class-name">String</span> number <span class="token operator">:</span> numberList<span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token keyword">int</span> num <span class="token operator">=</span> <span class="token class-name">Integer</span><span class="token punctuation">.</span><span class="token function">valueOf</span><span class="token punctuation">(</span>number<span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token comment">// 数组的位置</span>
            <span class="token keyword">int</span> index <span class="token operator">=</span> num <span class="token operator">/</span> <span class="token number">32</span><span class="token punctuation">;</span>
            <span class="token comment">// 位图的位置</span>
            <span class="token keyword">int</span> bitIndex <span class="token operator">=</span> num <span class="token operator">%</span> <span class="token number">32</span><span class="token punctuation">;</span>
            <span class="token comment">// 对应bit位设置为1</span>
            arr<span class="token punctuation">[</span>index<span class="token punctuation">]</span> <span class="token operator">|=</span> <span class="token punctuation">(</span><span class="token number">1</span> <span class="token operator">&lt;&lt;</span> bitIndex<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
        <span class="token keyword">int</span> count <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>
        <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> arr<span class="token punctuation">.</span>length<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> j <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> j <span class="token operator">&lt;</span> <span class="token number">32</span><span class="token punctuation">;</span> j<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                <span class="token comment">// 获取对应bit位的值</span>
                <span class="token keyword">int</span> targetBit <span class="token operator">=</span> <span class="token punctuation">(</span>arr<span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token operator">&gt;&gt;</span> j<span class="token punctuation">)</span> <span class="token operator">&amp;</span> <span class="token number">1</span><span class="token punctuation">;</span>
                <span class="token keyword">if</span> <span class="token punctuation">(</span>targetBit <span class="token operator">==</span> <span class="token number">1</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                    count<span class="token operator">++</span><span class="token punctuation">;</span>
                <span class="token punctuation">}</span>
            <span class="token punctuation">}</span>
        <span class="token punctuation">}</span>
        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;numberCount=&quot;</span> <span class="token operator">+</span> count<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>拓展：</p><p>设置对应bit位为0</p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token keyword">int</span> index <span class="token operator">=</span> <span class="token number">3</span><span class="token punctuation">;</span>
<span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token class-name">Integer</span><span class="token punctuation">.</span><span class="token function">toBinaryString</span><span class="token punctuation">(</span>index<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
index <span class="token operator">&amp;=</span> <span class="token operator">~</span><span class="token punctuation">(</span><span class="token number">1</span> <span class="token operator">&lt;&lt;</span> <span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token class-name">Integer</span><span class="token punctuation">.</span><span class="token function">toBinaryString</span><span class="token punctuation">(</span>index<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
index <span class="token operator">&amp;=</span> <span class="token operator">~</span><span class="token punctuation">(</span><span class="token number">1</span> <span class="token operator">&lt;&lt;</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token class-name">Integer</span><span class="token punctuation">.</span><span class="token function">toBinaryString</span><span class="token punctuation">(</span>index<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,28),e=[o];function c(i,l){return s(),a("div",null,e)}const k=n(p,[["render",c],["__file","统计不同号码的个数.html.vue"]]);export{k as default};

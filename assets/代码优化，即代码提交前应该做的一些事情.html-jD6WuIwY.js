const t=JSON.parse('{"key":"v-f1ca51be","path":"/home/%E4%BB%A3%E7%A0%81%E4%BC%98%E5%8C%96/%E4%BB%A3%E7%A0%81%E4%BC%98%E5%8C%96%EF%BC%8C%E5%8D%B3%E4%BB%A3%E7%A0%81%E6%8F%90%E4%BA%A4%E5%89%8D%E5%BA%94%E8%AF%A5%E5%81%9A%E7%9A%84%E4%B8%80%E4%BA%9B%E4%BA%8B%E6%83%85.html","title":"代码优化，即代码提交前应该做的一些事情","lang":"zh-CN","frontmatter":{"title":"代码优化，即代码提交前应该做的一些事情","description":"一、自测 单元测试 接口测试（推荐使用HttpClient测试，可以对controller类进行比较完善的测试，包括入参和出参，可以较好的验证数据是否准确，也便于团队复用某些接口的测试） 二、代码优化 review自己的代码，判断是否是最优的写法（性能、逻辑（有没有很复杂的逻辑，有没有很别扭的逻辑）、可读性等方面考虑） IDEA代码复杂度检测插件MetricsReloaded分析，右击Analyze-&gt;Calculate Metrics，也可以设置快捷键为Ctrl + Shift + Alt + M，提交时要达到low complexity级别 IDEA右键自带Analyze分析，右击Analyze-&gt;Inspect Code，此时，会扫描出比较多的问题项，包括但不限于：Alibaba编码规范扫描，设置快捷键为Ctrl + Shift + Alt + I，重点关注：Warning -&gt; Java Alibaba编码规约扫描，设置快捷键为Ctrl + Shift + Alt + J SonarLint分析，设置快捷键为Ctrl + Shift + Alt + S 这个步骤有涉及到比较大的优化改动点的话，就继续从自测开始，没有就继续往下执行","head":[["meta",{"property":"og:url","content":"https://mister-hope.github.io/home/%E4%BB%A3%E7%A0%81%E4%BC%98%E5%8C%96/%E4%BB%A3%E7%A0%81%E4%BC%98%E5%8C%96%EF%BC%8C%E5%8D%B3%E4%BB%A3%E7%A0%81%E6%8F%90%E4%BA%A4%E5%89%8D%E5%BA%94%E8%AF%A5%E5%81%9A%E7%9A%84%E4%B8%80%E4%BA%9B%E4%BA%8B%E6%83%85.html"}],["meta",{"property":"og:site_name","content":"Jef Blog"}],["meta",{"property":"og:title","content":"代码优化，即代码提交前应该做的一些事情"}],["meta",{"property":"og:description","content":"一、自测 单元测试 接口测试（推荐使用HttpClient测试，可以对controller类进行比较完善的测试，包括入参和出参，可以较好的验证数据是否准确，也便于团队复用某些接口的测试） 二、代码优化 review自己的代码，判断是否是最优的写法（性能、逻辑（有没有很复杂的逻辑，有没有很别扭的逻辑）、可读性等方面考虑） IDEA代码复杂度检测插件MetricsReloaded分析，右击Analyze-&gt;Calculate Metrics，也可以设置快捷键为Ctrl + Shift + Alt + M，提交时要达到low complexity级别 IDEA右键自带Analyze分析，右击Analyze-&gt;Inspect Code，此时，会扫描出比较多的问题项，包括但不限于：Alibaba编码规范扫描，设置快捷键为Ctrl + Shift + Alt + I，重点关注：Warning -&gt; Java Alibaba编码规约扫描，设置快捷键为Ctrl + Shift + Alt + J SonarLint分析，设置快捷键为Ctrl + Shift + Alt + S 这个步骤有涉及到比较大的优化改动点的话，就继续从自测开始，没有就继续往下执行"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2024-01-03T11:00:33.000Z"}],["meta",{"property":"article:author","content":"Jef"}],["meta",{"property":"article:modified_time","content":"2024-01-03T11:00:33.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"代码优化，即代码提交前应该做的一些事情\\",\\"image\\":[\\"\\"],\\"dateModified\\":\\"2024-01-03T11:00:33.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"Jef\\",\\"url\\":\\"https://mister-hope.com\\"}]}"]]},"headers":[{"level":2,"title":"一、自测","slug":"一、自测","link":"#一、自测","children":[]},{"level":2,"title":"二、代码优化","slug":"二、代码优化","link":"#二、代码优化","children":[]},{"level":2,"title":"三、结构调整","slug":"三、结构调整","link":"#三、结构调整","children":[]},{"level":2,"title":"四、测试编译","slug":"四、测试编译","link":"#四、测试编译","children":[]}],"git":{"createdTime":1704279633000,"updatedTime":1704279633000,"contributors":[{"name":"tufujie","email":"tufj@hua-cloud.com.cn","commits":1}]},"readingTime":{"minutes":2.16,"words":648},"filePathRelative":"home/代码优化/代码优化，即代码提交前应该做的一些事情.md","localizedDate":"2024年1月3日","excerpt":"<h2> <strong>一、自测</strong></h2>\\n<ul>\\n<li>单元测试</li>\\n<li>接口测试（推荐使用HttpClient测试，可以对controller类进行比较完善的测试，包括入参和出参，可以较好的验证数据是否准确，也便于团队复用某些接口的测试）</li>\\n</ul>\\n<h2> <strong>二、代码优化</strong></h2>\\n<ol>\\n<li>review自己的代码，判断是否是最优的写法（性能、逻辑（有没有很复杂的逻辑，有没有很别扭的逻辑）、可读性等方面考虑）</li>\\n<li>IDEA代码复杂度检测插件MetricsReloaded分析，右击Analyze-&gt;Calculate Metrics，也可以设置快捷键为<mark>Ctrl + Shift + Alt + M</mark>，提交时要达到<mark>low complexity</mark>级别</li>\\n<li>IDEA右键自带Analyze分析，右击Analyze-&gt;Inspect Code，此时，会扫描出比较多的问题项，包括但不限于：Alibaba编码规范扫描，设置快捷键为<mark>Ctrl + Shift + Alt + I</mark>，重点关注：Warning -&gt; Java</li>\\n<li>Alibaba编码规约扫描，设置快捷键为<mark>Ctrl + Shift + Alt + J</mark></li>\\n<li>SonarLint分析，设置快捷键为<mark>Ctrl + Shift + Alt + S</mark></li>\\n<li>这个步骤有涉及到比较大的优化改动点的话，就继续从自测开始，没有就继续往下执行</li>\\n</ol>","autoDesc":true}');export{t as data};

const e=JSON.parse('{"key":"v-475d533a","path":"/home/%E5%88%86%E5%B8%83%E5%BC%8F/%E5%88%86%E5%B8%83%E5%BC%8FSession%E7%9A%84%E5%AE%9E%E7%8E%B0%E6%96%B9%E6%A1%88.html","title":"分布式Session的实现方案","lang":"zh-CN","frontmatter":{"title":"分布式Session的实现方案","description":"简介 说明 本文介绍分布式Session的实现方案。 cookie和session的区别和联系 cookie是本地客户端用来存储少量数据信息的，保存在客户端，用户能够很容易的获取，安全性不高，存储的数据量小。 session是服务器用来存储部分数据信息，保存在服务器，用户不容易获取，安全性高，储存的数据量相对大，存储在服务器，会占用一些服务器资源，但是对于它的优点来说，这个缺点可以忽略了。","head":[["meta",{"property":"og:url","content":"https://mister-hope.github.io/home/%E5%88%86%E5%B8%83%E5%BC%8F/%E5%88%86%E5%B8%83%E5%BC%8FSession%E7%9A%84%E5%AE%9E%E7%8E%B0%E6%96%B9%E6%A1%88.html"}],["meta",{"property":"og:site_name","content":"Jef Blog"}],["meta",{"property":"og:title","content":"分布式Session的实现方案"}],["meta",{"property":"og:description","content":"简介 说明 本文介绍分布式Session的实现方案。 cookie和session的区别和联系 cookie是本地客户端用来存储少量数据信息的，保存在客户端，用户能够很容易的获取，安全性不高，存储的数据量小。 session是服务器用来存储部分数据信息，保存在服务器，用户不容易获取，安全性高，储存的数据量相对大，存储在服务器，会占用一些服务器资源，但是对于它的优点来说，这个缺点可以忽略了。"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:image","content":"https://mister-hope.github.io/"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2024-01-03T01:39:20.000Z"}],["meta",{"name":"twitter:card","content":"summary_large_image"}],["meta",{"name":"twitter:image:alt","content":"分布式Session的实现方案"}],["meta",{"property":"article:author","content":"Jef"}],["meta",{"property":"article:modified_time","content":"2024-01-03T01:39:20.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"分布式Session的实现方案\\",\\"image\\":[\\"https://mister-hope.github.io/\\"],\\"dateModified\\":\\"2024-01-03T01:39:20.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"Jef\\",\\"url\\":\\"https://mister-hope.com\\"}]}"]]},"headers":[{"level":2,"title":"简介","slug":"简介","link":"#简介","children":[]},{"level":2,"title":"解决方案","slug":"解决方案","link":"#解决方案","children":[{"level":3,"title":"方案一：客户端存储","slug":"方案一-客户端存储","link":"#方案一-客户端存储","children":[]},{"level":3,"title":"方案二：session复制","slug":"方案二-session复制","link":"#方案二-session复制","children":[]},{"level":3,"title":"方案三：session绑定（Nginx）","slug":"方案三-session绑定-nginx","link":"#方案三-session绑定-nginx","children":[]},{"level":3,"title":"方案四：使用Redis存储（推荐）","slug":"方案四-使用redis存储-推荐","link":"#方案四-使用redis存储-推荐","children":[]}]}],"git":{"createdTime":1703845758000,"updatedTime":1704245960000,"contributors":[{"name":"tufujie","email":"jef.tu@foxmail.com","commits":2},{"name":"tufujie","email":"tufj@hua-cloud.com.cn","commits":2}]},"readingTime":{"minutes":5.22,"words":1566},"filePathRelative":"home/分布式/分布式Session的实现方案.md","localizedDate":"2023年12月29日","excerpt":"<h2> 简介</h2>\\n<p><strong>说明</strong></p>\\n<p>本文介绍分布式Session的实现方案。</p>\\n<p><strong>cookie和session的区别和联系</strong></p>\\n<p>cookie是本地客户端用来<mark>存储少量数据信息</mark>的，<mark>保存在客户端</mark>，<mark>用户能够很容易的获取</mark>，<mark>安全性不高</mark>，<mark>存储的数据量小</mark>。</p>\\n<p>session是服务器用来存储部分数据信息，<mark>保存在服务器，用户不容易获取，安全性高</mark>，<mark>储存的数据量相对大</mark>，存储在服务器，会占用一些服务器资源，但是对于它的优点来说，这个缺点可以忽略了。</p>","autoDesc":true}');export{e as data};
